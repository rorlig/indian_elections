2013-10-18T06:38:50.966Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:38:50 GMT-0400 (EDT), pid=4834, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=29077504, heapTotal=18635008, heapUsed=9490968, loadavg=[1.181640625, 1.19677734375, 1.376953125], uptime=56016, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:39:21.826Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:39:21 GMT-0400 (EDT), pid=4835, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28463104, heapTotal=18635008, heapUsed=9492960, loadavg=[0.90283203125, 1.12841796875, 1.3447265625], uptime=56047, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:39:39.978Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:39:39 GMT-0400 (EDT), pid=4836, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28672000, heapTotal=18635008, heapUsed=9497840, loadavg=[0.88525390625, 1.10400390625, 1.330078125], uptime=56065, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:41:06.864Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:41:06 GMT-0400 (EDT), pid=4837, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28733440, heapTotal=18635008, heapUsed=9492448, loadavg=[1.14501953125, 1.0986328125, 1.302734375], uptime=56152, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:41:26.817Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:41:26 GMT-0400 (EDT), pid=4839, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28860416, heapTotal=18635008, heapUsed=9490888, loadavg=[1.171875, 1.107421875, 1.30078125], uptime=56172, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:42:44.921Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:42:44 GMT-0400 (EDT), pid=4841, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28676096, heapTotal=18635008, heapUsed=9499888, loadavg=[2.15087890625, 1.3720703125, 1.3818359375], uptime=56250, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:43:35.008Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:43:35 GMT-0400 (EDT), pid=4932, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29167616, heapTotal=18635008, heapUsed=9512352, loadavg=[1.48583984375, 1.32470703125, 1.36328125], uptime=56301, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:45:28.954Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:45:28 GMT-0400 (EDT), pid=4934, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=29757440, heapTotal=18635008, heapUsed=9499888, loadavg=[1.33154296875, 1.31298828125, 1.34814453125], uptime=56414, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:45:56.785Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:45:56 GMT-0400 (EDT), pid=4936, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=29192192, heapTotal=18635008, heapUsed=9762232, loadavg=[1.45263671875, 1.34912109375, 1.359375], uptime=56442, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:46:09.297Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:46:09 GMT-0400 (EDT), pid=4938, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28467200, heapTotal=18635008, heapUsed=9500648, loadavg=[1.671875, 1.39794921875, 1.37548828125], uptime=56455, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T06:46:46.670Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 02:46:46 GMT-0400 (EDT), pid=4939, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28704768, heapTotal=18635008, heapUsed=9513624, loadavg=[1.220703125, 1.30712890625, 1.3408203125], uptime=56492, trace=[column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T07:00:55.427Z - error: uncaughtException: env is not defined date=Fri Oct 18 2013 03:00:55 GMT-0400 (EDT), pid=4951, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=27676672, heapTotal=16571136, heapUsed=6994312, loadavg=[0.9052734375, 1.30322265625, 1.37353515625], uptime=57341, trace=[column=45, file=/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js, function=, line=12, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=20, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[ReferenceError: env is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js:12:45),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:20:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T07:01:01.508Z - error: uncaughtException: env is not defined date=Fri Oct 18 2013 03:01:01 GMT-0400 (EDT), pid=4952, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=27996160, heapTotal=16571136, heapUsed=6994056, loadavg=[0.99267578125, 1.314453125, 1.376953125], uptime=57347, trace=[column=45, file=/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js, function=, line=12, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=20, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[ReferenceError: env is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js:12:45),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:20:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T07:01:16.285Z - error: uncaughtException: Unrecognized data type for field name date=Fri Oct 18 2013 03:01:16 GMT-0400 (EDT), pid=4954, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28692480, heapTotal=18635008, heapUsed=9525088, loadavg=[0.84033203125, 1.265625, 1.35791015625], uptime=57362, trace=[column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=null, line=170, method=null, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=forOwn, line=1301, method=null, native=false, column=9, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=Function.forEach, line=2595, method=forEach, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.define, line=165, method=exports.Sequelize.define, native=false, column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Unrecognized data type for field name,     at /Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:170:15,     at forOwn (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:1301:15),     at Function.forEach (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:2595:9),     at module.exports.Sequelize.define (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:165:13),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:01:36.860Z - error: uncaughtException: Unrecognized data type for field name date=Fri Oct 18 2013 03:01:36 GMT-0400 (EDT), pid=4955, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=29720576, heapTotal=19654912, heapUsed=9930432, loadavg=[0.68115234375, 1.19921875, 1.3310546875], uptime=57382, trace=[column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=null, line=170, method=null, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=forOwn, line=1301, method=null, native=false, column=9, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=Function.forEach, line=2595, method=forEach, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.define, line=165, method=exports.Sequelize.define, native=false, column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Unrecognized data type for field name,     at /Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:170:15,     at forOwn (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:1301:15),     at Function.forEach (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:2595:9),     at module.exports.Sequelize.define (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:165:13),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:01:56.737Z - error: uncaughtException: Unrecognized data type for field name date=Fri Oct 18 2013 03:01:56 GMT-0400 (EDT), pid=4956, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28901376, heapTotal=18635008, heapUsed=9515840, loadavg=[0.703125, 1.169921875, 1.3173828125], uptime=57402, trace=[column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=null, line=170, method=null, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=forOwn, line=1301, method=null, native=false, column=9, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=Function.forEach, line=2595, method=forEach, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.define, line=165, method=exports.Sequelize.define, native=false, column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Unrecognized data type for field name,     at /Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:170:15,     at forOwn (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:1301:15),     at Function.forEach (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:2595:9),     at module.exports.Sequelize.define (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:165:13),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:5:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:02:31.322Z - error: uncaughtException: Unrecognized data type for field name date=Fri Oct 18 2013 03:02:31 GMT-0400 (EDT), pid=4958, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28401664, heapTotal=18635008, heapUsed=9515840, loadavg=[0.63916015625, 1.10205078125, 1.2861328125], uptime=57437, trace=[column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=null, line=170, method=null, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=forOwn, line=1301, method=null, native=false, column=9, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=Function.forEach, line=2595, method=forEach, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.define, line=165, method=exports.Sequelize.define, native=false, column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Unrecognized data type for field name,     at /Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:170:15,     at forOwn (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:1301:15),     at Function.forEach (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:2595:9),     at module.exports.Sequelize.define (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:165:13),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:6:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:04:12.175Z - error: uncaughtException: Sequelize is not defined date=Fri Oct 18 2013 03:04:12 GMT-0400 (EDT), pid=4959, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28418048, heapTotal=18635008, heapUsed=9513184, loadavg=[1.08203125, 1.0537109375, 1.240234375], uptime=57538, trace=[column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[ReferenceError: Sequelize is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:6:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T07:04:26.236Z - error: uncaughtException: Unrecognized data type for field name date=Fri Oct 18 2013 03:04:26 GMT-0400 (EDT), pid=4960, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28426240, heapTotal=18635008, heapUsed=9515264, loadavg=[0.9150390625, 1.017578125, 1.22412109375], uptime=57552, trace=[column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=null, line=170, method=null, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=forOwn, line=1301, method=null, native=false, column=9, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=Function.forEach, line=2595, method=forEach, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.define, line=165, method=exports.Sequelize.define, native=false, column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Unrecognized data type for field name,     at /Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:170:15,     at forOwn (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:1301:15),     at Function.forEach (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:2595:9),     at module.exports.Sequelize.define (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:165:13),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:6:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:04:52.183Z - error: uncaughtException: Cannot find module './Constituency' date=Fri Oct 18 2013 03:04:52 GMT-0400 (EDT), pid=4961, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28573696, heapTotal=18635008, heapUsed=9509656, loadavg=[0.98876953125, 1.02978515625, 1.22265625], uptime=57578, trace=[column=15, file=module.js, function=Function.Module._resolveFilename, line=338, method=Module._resolveFilename, native=false, column=25, file=module.js, function=Function.Module._load, line=280, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Cannot find module './Constituency',     at Function.Module._resolveFilename (module.js:338:15),     at Function.Module._load (module.js:280:25),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:05:01.932Z - error: uncaughtException: Unrecognized data type for field name date=Fri Oct 18 2013 03:05:01 GMT-0400 (EDT), pid=4962, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28508160, heapTotal=18635008, heapUsed=9515992, loadavg=[0.916015625, 1.01171875, 1.2138671875], uptime=57587, trace=[column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=null, line=170, method=null, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=forOwn, line=1301, method=null, native=false, column=9, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=Function.forEach, line=2595, method=forEach, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.define, line=165, method=exports.Sequelize.define, native=false, column=23, file=/Users/admin/work-verizon/indian-elections/app/models/State.js, function=, line=4, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Unrecognized data type for field name,     at /Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:170:15,     at forOwn (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:1301:15),     at Function.forEach (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:2595:9),     at module.exports.Sequelize.define (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:165:13),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/State.js:4:23),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:05:25.920Z - error: uncaughtException: Unrecognized data type for field name date=Fri Oct 18 2013 03:05:25 GMT-0400 (EDT), pid=4963, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28725248, heapTotal=18635008, heapUsed=9525448, loadavg=[0.79638671875, 0.97802734375, 1.1962890625], uptime=57611, trace=[column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=null, line=170, method=null, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=forOwn, line=1301, method=null, native=false, column=9, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=Function.forEach, line=2595, method=forEach, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.define, line=165, method=exports.Sequelize.define, native=false, column=23, file=/Users/admin/work-verizon/indian-elections/app/models/State.js, function=, line=4, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Unrecognized data type for field name,     at /Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:170:15,     at forOwn (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:1301:15),     at Function.forEach (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:2595:9),     at module.exports.Sequelize.define (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:165:13),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/State.js:4:23),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:07:16.577Z - error: uncaughtException: Unrecognized data type for field name date=Fri Oct 18 2013 03:07:16 GMT-0400 (EDT), pid=4965, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28856320, heapTotal=18635008, heapUsed=9871360, loadavg=[1.07373046875, 0.9970703125, 1.171875], uptime=57722, trace=[column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=null, line=170, method=null, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=forOwn, line=1301, method=null, native=false, column=9, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js, function=Function.forEach, line=2595, method=forEach, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.define, line=165, method=exports.Sequelize.define, native=false, column=30, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Unrecognized data type for field name,     at /Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:170:15,     at forOwn (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:1301:15),     at Function.forEach (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/node_modules/lodash/dist/lodash.js:2595:9),     at module.exports.Sequelize.define (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:165:13),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:6:30),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T07:12:42.606Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 03:12:42 GMT-0400 (EDT), pid=4967, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28758016, heapTotal=18635008, heapUsed=10284816, loadavg=[1.6083984375, 1.3466796875, 1.27392578125], uptime=58048, trace=[column=22, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=92, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false, column=3, file=node.js, function=null, line=901, method=null, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:92:22),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16),     at node.js:901:3]
2013-10-18T07:12:58.341Z - error: uncaughtException: Project is not defined date=Fri Oct 18 2013 03:12:58 GMT-0400 (EDT), pid=4970, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29908992, heapTotal=18635008, heapUsed=10666544, loadavg=[1.47314453125, 1.3291015625, 1.26806640625], uptime=58064, trace=[column=14, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=108, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false, column=3, file=node.js, function=null, line=901, method=null, native=false], stack=[ReferenceError: Project is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:108:14),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16),     at node.js:901:3]
2013-10-18T07:13:20.375Z - error: uncaughtException: Project is not defined date=Fri Oct 18 2013 03:13:20 GMT-0400 (EDT), pid=4971, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=28999680, heapTotal=18635008, heapUsed=10397936, loadavg=[1.59814453125, 1.3701171875, 1.28369140625], uptime=58086, trace=[column=14, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=108, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false, column=3, file=node.js, function=null, line=901, method=null, native=false], stack=[ReferenceError: Project is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:108:14),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16),     at node.js:901:3]
2013-10-18T07:13:41.162Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 03:13:41 GMT-0400 (EDT), pid=4973, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=30994432, heapTotal=28043520, heapUsed=10886952, loadavg=[1.74072265625, 1.4111328125, 1.29931640625], uptime=58107, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=145, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:145:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T07:13:46.682Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 03:13:46 GMT-0400 (EDT), pid=4974, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=30527488, heapTotal=27023616, heapUsed=10405168, loadavg=[1.84130859375, 1.4375, 1.30908203125], uptime=58112, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=145, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:145:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T07:13:51.763Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 03:13:51 GMT-0400 (EDT), pid=4975, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/Users/admin/.nvm/v0.10.12/bin/node, version=v0.10.12, argv=[node, /Users/admin/work-verizon/indian-elections/app.js], rss=31023104, heapTotal=27023616, heapUsed=10410864, loadavg=[1.69384765625, 1.41357421875, 1.30126953125], uptime=58117, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=145, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:145:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T15:55:45.973Z - error: uncaughtException: object is not a function date=Fri Oct 18 2013 11:55:45 GMT-0400 (EDT), pid=7733, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=34263040, heapTotal=28055552, heapUsed=16105168, loadavg=[1.94091796875, 1.92431640625, 1.87255859375], uptime=89431, trace=[column=17, file=/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js, function=, line=18, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: object is not a function,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js:18:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:3:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T15:56:45.453Z - error: uncaughtException: object is not a function date=Fri Oct 18 2013 11:56:45 GMT-0400 (EDT), pid=7734, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29110272, heapTotal=18635008, heapUsed=9729728, loadavg=[1.9384765625, 1.93212890625, 1.87841796875], uptime=89491, trace=[column=17, file=/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js, function=, line=18, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app/models/State.js, function=, line=2, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: object is not a function,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js:18:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/State.js:2:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T15:57:36.025Z - error: uncaughtException: object is not a function date=Fri Oct 18 2013 11:57:36 GMT-0400 (EDT), pid=7735, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28790784, heapTotal=18635008, heapUsed=9769936, loadavg=[2.3662109375, 2.07275390625, 1.93310546875], uptime=89542, trace=[column=17, file=/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js, function=, line=18, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app/models/Party.js, function=, line=2, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: object is not a function,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js:18:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Party.js:2:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T15:58:32.255Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 11:58:32 GMT-0400 (EDT), pid=7736, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28381184, heapTotal=18635008, heapUsed=9595592, loadavg=[2.32861328125, 2.1298828125, 1.96240234375], uptime=89598, trace=[column=28, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=9, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=18, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=, line=4, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:9:28),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Award.js:4:18),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T15:58:47.209Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 11:58:47 GMT-0400 (EDT), pid=7738, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28852224, heapTotal=18635008, heapUsed=9595592, loadavg=[2.78369140625, 2.2373046875, 2.00341796875], uptime=89613, trace=[column=28, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=9, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=18, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=, line=4, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:9:28),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Award.js:4:18),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T15:59:37.876Z - error: uncaughtException: Politician is not defined date=Fri Oct 18 2013 11:59:37 GMT-0400 (EDT), pid=7739, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28807168, heapTotal=18635008, heapUsed=9590304, loadavg=[2.31298828125, 2.1845703125, 1.99609375], uptime=89663, trace=[column=18, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=32, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=18, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=, line=4, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[ReferenceError: Politician is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:32:18),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Award.js:4:18),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T16:00:02.757Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 12:00:02 GMT-0400 (EDT), pid=7740, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28626944, heapTotal=18635008, heapUsed=9591560, loadavg=[2.734375, 2.2958984375, 2.041015625], uptime=89688, trace=[column=23, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=28, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.define.title, line=40, method=define.title, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Award.js:6:23),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at sequelize.define.title (/Users/admin/work-verizon/indian-elections/app.js:40:28),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43)]
2013-10-18T17:48:41.571Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 13:48:41 GMT-0400 (EDT), pid=7791, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29986816, heapTotal=19654912, heapUsed=9999864, loadavg=[2, 1.84033203125, 1.68798828125], uptime=96207, trace=[column=23, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=28, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.define.title, line=40, method=define.title, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Award.js:6:23),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at sequelize.define.title (/Users/admin/work-verizon/indian-elections/app.js:40:28),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43)]
2013-10-18T17:49:14.182Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 13:49:14 GMT-0400 (EDT), pid=7792, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28880896, heapTotal=18635008, heapUsed=10167216, loadavg=[2.005859375, 1.8544921875, 1.69677734375], uptime=96240, trace=[column=31, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=module.exports, line=10, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.define.title, line=40, method=define.title, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:10:31),     at sequelize.define.title (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16)]
2013-10-18T17:49:50.861Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 13:49:50 GMT-0400 (EDT), pid=7795, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28413952, heapTotal=18635008, heapUsed=9590920, loadavg=[1.8935546875, 1.85107421875, 1.701171875], uptime=96276, trace=[column=23, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=28, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.define.title, line=40, method=define.title, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Award.js:6:23),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at sequelize.define.title (/Users/admin/work-verizon/indian-elections/app.js:40:28),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43)]
2013-10-18T17:50:11.424Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 13:50:11 GMT-0400 (EDT), pid=7796, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29822976, heapTotal=18635008, heapUsed=10265176, loadavg=[1.79296875, 1.828125, 1.6953125], uptime=96297, trace=[column=24, file=/Users/admin/work-verizon/indian-elections/app/models/Party.js, function=module.exports, line=10, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.define.title, line=40, method=define.title, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Party.js:10:24),     at sequelize.define.title (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16)]
2013-10-18T17:50:34.267Z - error: uncaughtException: object is not a function date=Fri Oct 18 2013 13:50:34 GMT-0400 (EDT), pid=7797, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29122560, heapTotal=18635008, heapUsed=11052264, loadavg=[1.61865234375, 1.79052734375, 1.68505859375], uptime=96320, trace=[column=17, file=/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js, function=, line=18, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: object is not a function,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/common/DBHelper.js:18:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:3:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T17:51:11.764Z - error: uncaughtException: Cannot find module '../common/DBHelper' date=Fri Oct 18 2013 13:51:11 GMT-0400 (EDT), pid=7799, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29274112, heapTotal=18635008, heapUsed=10644632, loadavg=[2.0595703125, 1.8896484375, 1.724609375], uptime=96357, trace=[column=15, file=module.js, function=Function.Module._resolveFilename, line=338, method=Module._resolveFilename, native=false, column=25, file=module.js, function=Function.Module._load, line=280, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Cannot find module '../common/DBHelper',     at Function.Module._resolveFilename (module.js:338:15),     at Function.Module._load (module.js:280:25),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:3:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T17:52:24.373Z - error: uncaughtException: Cannot find module '../common/DBHelper' date=Fri Oct 18 2013 13:52:24 GMT-0400 (EDT), pid=7806, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29540352, heapTotal=18635008, heapUsed=10685608, loadavg=[2.33984375, 2.01220703125, 1.78271484375], uptime=96430, trace=[column=15, file=module.js, function=Function.Module._resolveFilename, line=338, method=Module._resolveFilename, native=false, column=25, file=module.js, function=Function.Module._load, line=280, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app/models/User.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Cannot find module '../common/DBHelper',     at Function.Module._resolveFilename (module.js:338:15),     at Function.Module._load (module.js:280:25),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/User.js:3:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T17:52:36.703Z - error: uncaughtException: Sequelize is not defined date=Fri Oct 18 2013 13:52:36 GMT-0400 (EDT), pid=7807, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29130752, heapTotal=18635008, heapUsed=10654232, loadavg=[2.423828125, 2.0439453125, 1.79736328125], uptime=96442, trace=[column=12, file=/Users/admin/work-verizon/indian-elections/app/models/User.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=12, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[ReferenceError: Sequelize is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/User.js:6:12),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:5:12),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T17:53:26.222Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 13:53:26 GMT-0400 (EDT), pid=7808, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29900800, heapTotal=19654912, heapUsed=11088688, loadavg=[1.65576171875, 1.8828125, 1.7490234375], uptime=96492, trace=[column=22, file=/Users/admin/work-verizon/indian-elections/app/models/User.js, function=, line=8, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=12, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/User.js:8:22),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:5:12),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T17:53:36.081Z - error: uncaughtException: User is not defined date=Fri Oct 18 2013 13:53:36 GMT-0400 (EDT), pid=7809, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=30392320, heapTotal=18635008, heapUsed=10659392, loadavg=[1.68310546875, 1.88427734375, 1.75048828125], uptime=96502, trace=[column=1, file=/Users/admin/work-verizon/indian-elections/app/models/User.js, function=, line=27, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=12, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[ReferenceError: User is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/User.js:27:1),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:5:12),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T17:53:42.776Z - error: uncaughtException: User is not defined date=Fri Oct 18 2013 13:53:42 GMT-0400 (EDT), pid=7810, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29601792, heapTotal=18635008, heapUsed=10921280, loadavg=[1.73779296875, 1.8876953125, 1.7529296875], uptime=96508, trace=[column=18, file=/Users/admin/work-verizon/indian-elections/app/models/User.js, function=, line=30, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=12, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=, line=5, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[ReferenceError: User is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/User.js:30:18),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:5:12),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T17:53:51.254Z - error: uncaughtException: Sequelize is not defined date=Fri Oct 18 2013 13:53:51 GMT-0400 (EDT), pid=7812, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29323264, heapTotal=18635008, heapUsed=10658856, loadavg=[1.6240234375, 1.85791015625, 1.74365234375], uptime=96517, trace=[column=14, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=, line=7, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=28, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.define.title, line=40, method=define.title, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false], stack=[ReferenceError: Sequelize is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:7:14),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at sequelize.define.title (/Users/admin/work-verizon/indian-elections/app.js:40:28),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43)]
2013-10-18T17:54:32.705Z - error: uncaughtException: Cannot find module '../common/DBHelper' date=Fri Oct 18 2013 13:54:32 GMT-0400 (EDT), pid=7813, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28811264, heapTotal=18635008, heapUsed=10645560, loadavg=[1.677734375, 1.85498046875, 1.74658203125], uptime=96558, trace=[column=15, file=module.js, function=Function.Module._resolveFilename, line=338, method=Module._resolveFilename, native=false, column=25, file=module.js, function=Function.Module._load, line=280, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=17, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false], stack=[Error: Cannot find module '../common/DBHelper',     at Function.Module._resolveFilename (module.js:338:15),     at Function.Module._load (module.js:280:25),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:3:17),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17)]
2013-10-18T17:54:45.411Z - error: uncaughtException: Object function (database, username, password, options) {
    var urlParts
    options = options || {}

    if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {
      options = username || {}
      urlParts = url.parse(arguments[0])
      database = urlParts.path.replace(/^\//,  '')
      dialect = urlParts.protocol
      options.dialect = urlParts.protocol.replace(/:$/, '')
      options.host = urlParts.hostname

      if (urlParts.port) {
        options.port = urlParts.port
      }

      if (urlParts.auth) {
        username = urlParts.auth.split(':')[0]
        password = urlParts.auth.split(':')[1]
      }
    }

    this.options = Utils._.extend({
      dialect: 'mysql',
      dialectModulePath: null,
      host: 'localhost',
      protocol: 'tcp',
      define: {},
      query: {},
      sync: {},
      logging: console.log,
      omitNull: false,
      queue: true,
      native: false,
      replication: false,
      pool: {},
      quoteIdentifiers: true,
      language: 'en'
    }, options || {})

    if (this.options.logging === true) {
      console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log')
      this.options.logging = console.log
    }

    this.config = {
      database: database,
      username: username,
      password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),
      host    : this.options.host,
      port    : this.options.port,
      pool    : this.options.pool,
      protocol: this.options.protocol,
      queue   : this.options.queue,
      native  : this.options.native,
      replication: this.options.replication,
      dialectModulePath: this.options.dialectModulePath,
      maxConcurrentQueries: this.options.maxConcurrentQueries
    }

    try {
      var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager")
    } catch(err) {
      throw new Error("The dialect " + this.options.dialect + " is not supported.")
    }

    this.daoFactoryManager = new DAOFactoryManager(this)
    this.connectorManager  = new ConnectorManager(this, this.config)

    this.importCache = {}
  } has no method 'define' date=Fri Oct 18 2013 13:54:45 GMT-0400 (EDT), pid=7814, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28717056, heapTotal=18635008, heapUsed=10700240, loadavg=[1.72021484375, 1.85888671875, 1.7490234375], uptime=96571, trace=[column=24, file=/Users/admin/work-verizon/indian-elections/app/models/State.js, function=module.exports, line=9, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.define.title, line=40, method=define.title, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false], stack=[TypeError: Object function (database, username, password, options) {,     var urlParts,     options = options || {}, ,     if (arguments.length === 1 || (arguments.length === 2 && typeof username === 'object')) {,       options = username || {},       urlParts = url.parse(arguments[0]),       database = urlParts.path.replace(/^\//,  ''),       dialect = urlParts.protocol,       options.dialect = urlParts.protocol.replace(/:$/, ''),       options.host = urlParts.hostname, ,       if (urlParts.port) {,         options.port = urlParts.port,       }, ,       if (urlParts.auth) {,         username = urlParts.auth.split(':')[0],         password = urlParts.auth.split(':')[1],       },     }, ,     this.options = Utils._.extend({,       dialect: 'mysql',,       dialectModulePath: null,,       host: 'localhost',,       protocol: 'tcp',,       define: {},,       query: {},,       sync: {},,       logging: console.log,,       omitNull: false,,       queue: true,,       native: false,,       replication: false,,       pool: {},,       quoteIdentifiers: true,,       language: 'en',     }, options || {}), ,     if (this.options.logging === true) {,       console.log('DEPRECATION WARNING: The logging-option should be either a function or false. Default: console.log'),       this.options.logging = console.log,     }, ,     this.config = {,       database: database,,       username: username,,       password: (( (["", null, false].indexOf(password) > -1) || (typeof password == 'undefined')) ? null : password),,       host    : this.options.host,,       port    : this.options.port,,       pool    : this.options.pool,,       protocol: this.options.protocol,,       queue   : this.options.queue,,       native  : this.options.native,,       replication: this.options.replication,,       dialectModulePath: this.options.dialectModulePath,,       maxConcurrentQueries: this.options.maxConcurrentQueries,     }, ,     try {,       var ConnectorManager = require("./dialects/" + this.options.dialect + "/connector-manager"),     } catch(err) {,       throw new Error("The dialect " + this.options.dialect + " is not supported."),     }, ,     this.daoFactoryManager = new DAOFactoryManager(this),     this.connectorManager  = new ConnectorManager(this, this.config), ,     this.importCache = {},   } has no method 'define',     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/State.js:9:24),     at sequelize.define.title (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16)]
2013-10-18T17:58:30.646Z - error: uncaughtException: Cannot read property 'language' of undefined date=Fri Oct 18 2013 13:58:30 GMT-0400 (EDT), pid=7825, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28864512, heapTotal=18635008, heapUsed=10162056, loadavg=[2.15869140625, 2.126953125, 1.8955078125], uptime=96796, trace=[column=118, file=module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js, function=new, line=22, method=null, native=false, column=21, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js, function=Mixin.hasOne, line=11, method=hasOne, native=false, column=8, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=19, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false], stack=[TypeError: Cannot read property 'language' of undefined,     at new module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js:22:118),     at Mixin.hasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js:11:21),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:19:8),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12)]
2013-10-18T17:59:24.107Z - error: uncaughtException: Cannot call method 'define' of undefined date=Fri Oct 18 2013 13:59:24 GMT-0400 (EDT), pid=7827, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29036544, heapTotal=18635008, heapUsed=10156224, loadavg=[2.33984375, 2.14404296875, 1.912109375], uptime=96850, trace=[column=29, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=module.exports, line=8, method=exports, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=19, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[TypeError: Cannot call method 'define' of undefined,     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:8:29),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:19:15),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T18:00:00.138Z - error: uncaughtException: Cannot call method 'define' of undefined date=Fri Oct 18 2013 14:00:00 GMT-0400 (EDT), pid=7828, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29401088, heapTotal=18635008, heapUsed=10156456, loadavg=[2.28955078125, 2.14453125, 1.92138671875], uptime=96886, trace=[column=29, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=module.exports, line=8, method=exports, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=19, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[TypeError: Cannot call method 'define' of undefined,     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:8:29),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:19:15),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T18:00:19.234Z - error: uncaughtException: Cannot call method 'define' of undefined date=Fri Oct 18 2013 14:00:19 GMT-0400 (EDT), pid=7829, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28680192, heapTotal=18635008, heapUsed=10156424, loadavg=[2.10986328125, 2.1171875, 1.91552734375], uptime=96905, trace=[column=29, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=module.exports, line=8, method=exports, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=19, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[TypeError: Cannot call method 'define' of undefined,     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:8:29),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:19:15),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T18:00:51.304Z - error: uncaughtException: Cannot read property 'tableName' of undefined date=Fri Oct 18 2013 14:00:51 GMT-0400 (EDT), pid=7830, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29949952, heapTotal=18635008, heapUsed=10464216, loadavg=[2.05224609375, 2.10400390625, 1.9169921875], uptime=96937, trace=[column=67, file=module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js, function=new, line=11, method=null, native=false, column=21, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js, function=Mixin.hasOne, line=11, method=hasOne, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=module.exports, line=25, method=exports, native=false, column=15, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=19, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false], stack=[TypeError: Cannot read property 'tableName' of undefined,     at new module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js:11:67),     at Mixin.hasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js:11:21),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:25:13),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:19:15),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32)]
2013-10-18T18:02:00.258Z - error: uncaughtException: Unexpected token ( date=Fri Oct 18 2013 14:02:00 GMT-0400 (EDT), pid=7831, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29626368, heapTotal=18635008, heapUsed=9518976, loadavg=[2.08056640625, 2.07080078125, 1.916015625], uptime=97006, trace=[column=25, file=module.js, function=Module._compile, line=439, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false], stack=[SyntaxError: Unexpected token (,     at Module._compile (module.js:439:25),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32)]
2013-10-18T18:02:18.236Z - error: uncaughtException: Constituency is not defined date=Fri Oct 18 2013 14:02:18 GMT-0400 (EDT), pid=7832, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29470720, heapTotal=18635008, heapUsed=9513032, loadavg=[2.04296875, 2.06591796875, 1.91650390625], uptime=97024, trace=[column=18, file=/Users/admin/work-verizon/indian-elections/app/models/Constituency.js, function=, line=16, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=20, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=, line=3, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false], stack=[ReferenceError: Constituency is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Constituency.js:16:18),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:3:20),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10)]
2013-10-18T18:03:47.189Z - error: uncaughtException: Cannot read property 'tableName' of undefined date=Fri Oct 18 2013 14:03:47 GMT-0400 (EDT), pid=7833, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29544448, heapTotal=18635008, heapUsed=10161544, loadavg=[2.17822265625, 2.06787109375, 1.9287109375], uptime=97113, trace=[column=67, file=module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js, function=new, line=11, method=null, native=false, column=21, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js, function=Mixin.hasOne, line=11, method=hasOne, native=false, column=8, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=19, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false], stack=[TypeError: Cannot read property 'tableName' of undefined,     at new module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js:11:67),     at Mixin.hasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js:11:21),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:19:8),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12)]
2013-10-18T18:04:06.397Z - error: uncaughtException: Cannot read property 'language' of undefined date=Fri Oct 18 2013 14:04:06 GMT-0400 (EDT), pid=7834, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29548544, heapTotal=18635008, heapUsed=10160936, loadavg=[1.94970703125, 2.0283203125, 1.9169921875], uptime=97132, trace=[column=118, file=module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js, function=new, line=22, method=null, native=false, column=21, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js, function=Mixin.hasOne, line=11, method=hasOne, native=false, column=8, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=19, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false], stack=[TypeError: Cannot read property 'language' of undefined,     at new module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js:22:118),     at Mixin.hasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js:11:21),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:19:8),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12)]
2013-10-18T18:04:38.281Z - error: uncaughtException: Cannot read property 'tableName' of undefined date=Fri Oct 18 2013 14:04:38 GMT-0400 (EDT), pid=7835, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=30519296, heapTotal=18635008, heapUsed=10897024, loadavg=[1.97265625, 2.02490234375, 1.91796875], uptime=97164, trace=[column=67, file=module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js, function=new, line=11, method=null, native=false, column=21, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js, function=Mixin.hasOne, line=11, method=hasOne, native=false, column=13, file=/Users/admin/work-verizon/indian-elections/app/models/Politician.js, function=module.exports, line=25, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false], stack=[TypeError: Cannot read property 'tableName' of undefined,     at new module.exports.HasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/has-one.js:11:67),     at Mixin.hasOne (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/associations/mixin.js:11:21),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Politician.js:25:13),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12)]
2013-10-18T18:05:11.096Z - error: uncaughtException: Politician is not defined date=Fri Oct 18 2013 14:05:11 GMT-0400 (EDT), pid=7837, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=30461952, heapTotal=19654912, heapUsed=11258184, loadavg=[2.12109375, 2.04052734375, 1.92578125], uptime=97197, trace=[column=1, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=108, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false, column=3, file=node.js, function=null, line=901, method=null, native=false], stack=[ReferenceError: Politician is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:108:1),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16),     at node.js:901:3]
2013-10-18T18:07:43.134Z - error: uncaughtException: sequelize is not defined date=Fri Oct 18 2013 14:07:43 GMT-0400 (EDT), pid=7839, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28504064, heapTotal=18635008, heapUsed=9588896, loadavg=[2.6796875, 2.18017578125, 1.98779296875], uptime=97349, trace=[column=18, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=, line=6, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=28, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false], stack=[ReferenceError: sequelize is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app/models/Award.js:6:18),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:28),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43)]
2013-10-18T18:07:57.239Z - error: uncaughtException: Cannot find module './Politician' date=Fri Oct 18 2013 14:07:57 GMT-0400 (EDT), pid=7840, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28938240, heapTotal=18635008, heapUsed=9628136, loadavg=[2.74365234375, 2.21923828125, 2.0048828125], uptime=97363, trace=[column=15, file=module.js, function=Function.Module._resolveFilename, line=338, method=Module._resolveFilename, native=false, column=25, file=module.js, function=Function.Module._load, line=280, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.import, line=219, method=exports.Sequelize.import, native=false, column=35, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=14, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false], stack=[Error: Cannot find module './Politician',     at Function.Module._resolveFilename (module.js:338:15),     at Function.Module._load (module.js:280:25),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at module.exports.Sequelize.import (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:219:24),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:14:35),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26)]
2013-10-18T18:08:25.574Z - error: uncaughtException: Cannot find module '/Users/admin/work-verizon/indian-elections/app/models/app/models/Politician' date=Fri Oct 18 2013 14:08:25 GMT-0400 (EDT), pid=7841, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=28921856, heapTotal=18635008, heapUsed=9625088, loadavg=[2.34130859375, 2.1787109375, 1.99658203125], uptime=97391, trace=[column=15, file=module.js, function=Function.Module._resolveFilename, line=338, method=Module._resolveFilename, native=false, column=25, file=module.js, function=Function.Module._load, line=280, method=Module._load, native=false, column=17, file=module.js, function=Module.require, line=364, method=require, native=false, column=17, file=module.js, function=require, line=380, method=null, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js, function=module.exports.Sequelize.import, line=219, method=exports.Sequelize.import, native=false, column=35, file=/Users/admin/work-verizon/indian-elections/app/models/Award.js, function=module.exports, line=14, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false], stack=[Error: Cannot find module '/Users/admin/work-verizon/indian-elections/app/models/app/models/Politician',     at Function.Module._resolveFilename (module.js:338:15),     at Function.Module._load (module.js:280:25),     at Module.require (module.js:364:17),     at require (module.js:380:17),     at module.exports.Sequelize.import (/Users/admin/work-verizon/indian-elections/node_modules/sequelize/lib/sequelize.js:219:24),     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Award.js:14:35),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26)]
2013-10-18T18:08:37.856Z - error: uncaughtException: Politician is not defined date=Fri Oct 18 2013 14:08:37 GMT-0400 (EDT), pid=7842, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29687808, heapTotal=18635008, heapUsed=11302000, loadavg=[2.294921875, 2.17236328125, 1.99658203125], uptime=97403, trace=[column=1, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=108, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false, column=3, file=node.js, function=null, line=901, method=null, native=false], stack=[ReferenceError: Politician is not defined,     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:108:1),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16),     at node.js:901:3]
2013-10-18T18:09:41.315Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 14:09:41 GMT-0400 (EDT), pid=7843, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=31301632, heapTotal=28055552, heapUsed=11063456, loadavg=[2.42724609375, 2.20361328125, 2.01904296875], uptime=97467, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=156, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:156:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T18:09:45.323Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 14:09:45 GMT-0400 (EDT), pid=7844, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=31547392, heapTotal=28055552, heapUsed=11061568, loadavg=[2.47265625, 2.216796875, 2.0244140625], uptime=97471, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=156, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:156:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T18:11:01.890Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 14:11:01 GMT-0400 (EDT), pid=7845, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=31367168, heapTotal=28055552, heapUsed=11384152, loadavg=[2.15478515625, 2.16650390625, 2.01708984375], uptime=97547, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=156, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:156:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T18:12:29.205Z - error: uncaughtException: Cannot call method 'hasMany' of undefined date=Fri Oct 18 2013 14:12:29 GMT-0400 (EDT), pid=7849, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29872128, heapTotal=18635008, heapUsed=11397320, loadavg=[2.21484375, 2.1103515625, 2.0029296875], uptime=97635, trace=[column=7, file=/Users/admin/work-verizon/indian-elections/app/models/Rating.js, function=module.exports, line=16, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false], stack=[TypeError: Cannot call method 'hasMany' of undefined,     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Rating.js:16:7),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16)]
2013-10-18T18:15:28.919Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 14:15:28 GMT-0400 (EDT), pid=7852, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=30412800, heapTotal=28055552, heapUsed=11309176, loadavg=[2.54296875, 2.13232421875, 2.013671875], uptime=97814, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=156, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:156:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T18:16:32.114Z - error: uncaughtException: Maximum call stack size exceeded date=Fri Oct 18 2013 14:16:32 GMT-0400 (EDT), pid=7856, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=39927808, heapTotal=32147200, heapUsed=13257744, loadavg=[1.62646484375, 1.96240234375, 1.95751953125], uptime=97878, trace=[], stack=undefined
2013-10-18T18:16:48.651Z - error: uncaughtException: Maximum call stack size exceeded date=Fri Oct 18 2013 14:16:48 GMT-0400 (EDT), pid=7857, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=39178240, heapTotal=31115264, heapUsed=12788296, loadavg=[1.4873046875, 1.91455078125, 1.93994140625], uptime=97894, trace=[], stack=undefined
2013-10-18T18:16:57.805Z - error: uncaughtException: Maximum call stack size exceeded date=Fri Oct 18 2013 14:16:57 GMT-0400 (EDT), pid=7858, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=35692544, heapTotal=28055552, heapUsed=9647536, loadavg=[1.56591796875, 1.91650390625, 1.93994140625], uptime=97903, trace=[], stack=undefined
2013-10-18T19:27:23.324Z - error: uncaughtException: Sequelize is not defined date=Fri Oct 18 2013 15:27:23 GMT-0400 (EDT), pid=7911, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29847552, heapTotal=18635008, heapUsed=10186240, loadavg=[3.69384765625, 3.04443359375, 2.5556640625], uptime=102129, trace=[column=16, file=/Users/admin/work-verizon/indian-elections/app/models/Comment.js, function=module.exports, line=7, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false], stack=[ReferenceError: Sequelize is not defined,     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Comment.js:7:16),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16)]
2013-10-18T19:27:36.408Z - error: uncaughtException: User is not defined date=Fri Oct 18 2013 15:27:36 GMT-0400 (EDT), pid=7912, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29888512, heapTotal=18635008, heapUsed=10243112, loadavg=[3.6474609375, 3.05810546875, 2.56640625], uptime=102142, trace=[column=17, file=/Users/admin/work-verizon/indian-elections/app/models/Comment.js, function=module.exports, line=12, method=exports, native=false, column=70, file=/Users/admin/work-verizon/indian-elections/app.js, function=sequelize.sync.force, line=40, method=sync.force, native=false, column=null, file=null, function=Array.forEach, line=null, method=forEach, native=true, column=43, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=38, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false], stack=[ReferenceError: User is not defined,     at module.exports (/Users/admin/work-verizon/indian-elections/app/models/Comment.js:12:17),     at sequelize.sync.force (/Users/admin/work-verizon/indian-elections/app.js:40:70),     at Array.forEach (native),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:38:43),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16)]
2013-10-18T19:29:35.991Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 15:29:35 GMT-0400 (EDT), pid=7914, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=32309248, heapTotal=28055552, heapUsed=11467792, loadavg=[3.64111328125, 3.251953125, 2.70458984375], uptime=102261, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=156, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:156:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T19:46:07.781Z - error: uncaughtException: Maximum call stack size exceeded date=Fri Oct 18 2013 15:46:07 GMT-0400 (EDT), pid=7921, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=37838848, heapTotal=28055552, heapUsed=9869224, loadavg=[3.2958984375, 3.09765625, 2.93017578125], uptime=103253, trace=[], stack=undefined
2013-10-18T19:46:24.038Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 15:46:24 GMT-0400 (EDT), pid=7922, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=32034816, heapTotal=28055552, heapUsed=11523112, loadavg=[3.0947265625, 3.06005859375, 2.9189453125], uptime=103270, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=156, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:156:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
2013-10-18T20:23:41.991Z - error: uncaughtException: Cannot call method 'get' of undefined date=Fri Oct 18 2013 16:23:41 GMT-0400 (EDT), pid=7972, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=30351360, heapTotal=18635008, heapUsed=12244360, loadavg=[2.13232421875, 2.12060546875, 2.4140625], uptime=105507, trace=[column=6, file=/Users/admin/work-verizon/indian-elections/config/routes.js, function=module.exports, line=24, method=exports, native=false, column=27, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=52, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false, column=3, file=node.js, function=null, line=901, method=null, native=false], stack=[TypeError: Cannot call method 'get' of undefined,     at module.exports (/Users/admin/work-verizon/indian-elections/config/routes.js:24:6),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:52:27),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16),     at node.js:901:3]
2013-10-18T20:24:59.551Z - error: uncaughtException: Cannot call method 'get' of undefined date=Fri Oct 18 2013 16:24:59 GMT-0400 (EDT), pid=7974, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=29302784, heapTotal=18635008, heapUsed=12506744, loadavg=[1.3125, 1.89111328125, 2.302734375], uptime=105585, trace=[column=6, file=/Users/admin/work-verizon/indian-elections/config/routes.js, function=module.exports, line=24, method=exports, native=false, column=27, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=52, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false, column=3, file=node.js, function=null, line=901, method=null, native=false], stack=[TypeError: Cannot call method 'get' of undefined,     at module.exports (/Users/admin/work-verizon/indian-elections/config/routes.js:24:6),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:52:27),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16),     at node.js:901:3]
2013-10-18T20:25:06.231Z - error: uncaughtException: Cannot call method 'get' of undefined date=Fri Oct 18 2013 16:25:06 GMT-0400 (EDT), pid=7976, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=30314496, heapTotal=18635008, heapUsed=12511792, loadavg=[1.20703125, 1.859375, 2.2890625], uptime=105592, trace=[column=6, file=/Users/admin/work-verizon/indian-elections/config/routes.js, function=module.exports, line=24, method=exports, native=false, column=27, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=52, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false, column=16, file=node.js, function=startup, line=119, method=null, native=false, column=3, file=node.js, function=null, line=901, method=null, native=false], stack=[TypeError: Cannot call method 'get' of undefined,     at module.exports (/Users/admin/work-verizon/indian-elections/config/routes.js:24:6),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:52:27),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10),     at startup (node.js:119:16),     at node.js:901:3]
2013-10-18T20:28:44.557Z - error: uncaughtException: listen EADDRINUSE date=Fri Oct 18 2013 16:28:44 GMT-0400 (EDT), pid=7997, uid=501, gid=20, cwd=/Users/admin/work-verizon/indian-elections, execPath=/usr/local/bin/node, version=v0.10.18, argv=[/usr/local/bin/node, /Users/admin/work-verizon/indian-elections/app.js], rss=30769152, heapTotal=28055552, heapUsed=12161536, loadavg=[1.76123046875, 1.76513671875, 2.1396484375], uptime=105810, trace=[column=11, file=net.js, function=errnoException, line=901, method=null, native=false, column=14, file=net.js, function=Server._listen2, line=1039, method=_listen2, native=false, column=10, file=net.js, function=listen, line=1061, method=null, native=false, column=5, file=net.js, function=Server.listen, line=1127, method=listen, native=false, column=24, file=/Users/admin/work-verizon/indian-elections/app.js, function=, line=79, method=null, native=false, column=26, file=module.js, function=Module._compile, line=456, method=_compile, native=false, column=10, file=module.js, function=Object.Module._extensions..js, line=474, method=Module._extensions..js, native=false, column=32, file=module.js, function=Module.load, line=356, method=load, native=false, column=12, file=module.js, function=Function.Module._load, line=312, method=Module._load, native=false, column=10, file=module.js, function=Function.Module.runMain, line=497, method=Module.runMain, native=false], stack=[Error: listen EADDRINUSE,     at errnoException (net.js:901:11),     at Server._listen2 (net.js:1039:14),     at listen (net.js:1061:10),     at Server.listen (net.js:1127:5),     at Object.<anonymous> (/Users/admin/work-verizon/indian-elections/app.js:79:24),     at Module._compile (module.js:456:26),     at Object.Module._extensions..js (module.js:474:10),     at Module.load (module.js:356:32),     at Function.Module._load (module.js:312:12),     at Function.Module.runMain (module.js:497:10)]
